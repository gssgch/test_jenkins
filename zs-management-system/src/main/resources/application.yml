server:
  port: ${PORT:5002}
spring:
  application:
    name: zs-management-system
  redis:
    host: ${REDIS_HOST:119.96.128.98}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_POSSWORD:123456}
    database: 1
    timeout: 5000 #连接超时 毫秒
    jedis:
      pool:
        maxActive: 3
        maxIdle: 3
        minIdle: 1
        maxWait: -1 #连接池最大等行时间 -1没有限制
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://119.96.128.98:33307/db1?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver

  mail:
    host: smtp.qq.com
    protocol: smtp
    username: 1105696684@qq.com
    password: lhrqumqosxpzgdaf
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          timeout: 25000
          ssl.enable: true
          socketFactory.class: javax.net.ssl.SSLSocketFactory
          starttls.enable: true
          socketFactory.port: 465　
          port: 465

hdfs:
  path: ${hdfsPath:hdfs://119.96.128.98:8020}
  username: ${username:zhansheng}

mybatis:
  mapper-locations: classpath*:com.zhansheng.management_system.dao.*Mapper.xml
  type-aliases-package: com.zhansheng.framework.domain

logging:
  level:
    com.zhansheng.management_system.* : debug


files:
  path: ${file-path:/rootPath/}
  #静态资源对外暴露的访问路径
  staticAccessPath: ${file-staticAccessPath:/images/**}
  #文件上传目录（注意Linux和Windows上的目录结构不同）
  rootPath: ${rootPath:/root/images/}
  #rootPath: ${rootPath:e://data/}
  hdfsLocalPath: ${hdfsLocalPath:/root/hdfs/files/}
  #hdfsLocalPath: ${hdfsLocalPath:E://hdfs/files/}
  hdfsVideoPath: ${hdfsVideoPath:/TestData/video/}
  hdfsVoicePath: ${hdfsVoicePath:/TestData/voice/}
#logging:
#  path: /usr/0

eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
#        defaultZone: ${EUREKA_SERVER:http://192.168.1.13:50101/eureka/}
#        defaultZone: ${EUREKA_SERVER:http://127.0.0.1:50101/eureka/}
      defaultZone: ${EUREKA_SERVER:http://192.168.0.74:50101/eureka/}
  instance:
    prefer-ip-address:  true  #将自己的ip地址注册到Eureka服务中
#    ip-address: ${IP_ADDRESS:192.168.1.13}
#    ip-address: ${IP_ADDRESS:127.0.0.1}
    ip-address: ${IP_ADDRESS:119.96.128.98}
    instance-id: ${spring.application.name}:${server.port} #指定实例id




ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间