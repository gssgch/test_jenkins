server:
  port: ${PORT:5003} #服务端口  port环境变量 port默认端口9011

spring:
  application:
    name: zs-govern-gateway #指定服务名
  redis:
      host: ${REDIS_HOST:119.96.128.98}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_POSSWORD:123456}
      timeout: 5000 #连接超时 毫秒
      jedis:
        pool:
          maxActive: 3
          maxIdle: 3
          minIdle: 1
          maxWait: -1 #连接池最大等行时间 -1没有限制



zuul:
  #需要忽略的头部信息，不在传播到其他服务
  sensitive-headers: Access-Control-Allow-Origin
  ignored-headers: Access-Control-Allow-Origin,H-APP-Id,Token,APPToken
  max:
    host:
      connections: 500000 #最大请求时间
  host:  #等待
    socket-timeout-millis: 600000
    connect-timeout-millis: 600000


  routes: #指定实例id
    zs-service-manager-user:
      path: /user/**
      serviceId: zs-management-system
      strip-prefix: true  #true：代理转发时去掉前缀，false:代理转发时不去掉前缀
      sensitiveHeaders:

    service-faultdetection:
      path: /faultdetection/**
      serviceId: zs-service-faultdetection
      sensitiveHeaders:
      strip-prefix: true #true：代理转发时去掉前缀，false:代理转发时不去掉前缀

eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
#      defaultZone: ${EUREKA_SERVER:http://192.168.1.13:50101/eureka/}
#      defaultZone: ${EUREKA_SERVER:http://127.0.0.1:50101/eureka/}
      defaultZone: ${EUREKA_SERVER:http://192.168.0.74:50101/eureka/}
  instance:
    prefer-ip-address:  true  #将自己的ip地址注册到Eureka服务中
#    ip-address: ${IP_ADDRESS:192.168.1.13}
#    ip-address: ${IP_ADDRESS:127.0.0.1}
    ip-address: ${IP_ADDRESS:192.168.0.74}
    instance-id: ${spring.application.name}:${server.port}

ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间